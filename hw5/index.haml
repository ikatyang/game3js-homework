!!! 5
%html
	%head
		%meta(charset='utf-8')
		%title='Game3js Homework5'
		%script(src='https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.5.1/dat.gui.min.js')
		%script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js')
		%script(src='https://cdnjs.cloudflare.com/ajax/libs/three.js/r81/three.min.js')
		%script(src='../src/OrbitControls.js')
		:css
			body {
				margin: 0;
				overflow: hidden;
			}
			.top {
				position: absolute;
				width: 100%;
				padding: 10px;
				text-align: center;
				top: 1em;
				color: yellow;
			}
	%body
		.top='GP_HW5'
		:javascript
			var scene, camera, renderer, controls;
			var clock = new THREE.Clock();
			
			init();
			animate();

			function init() {
				scene = new THREE.Scene();

				camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 10000);
				camera.position.set(0, 500, 500);

				renderer = new THREE.WebGLRenderer();
				renderer.setSize(window.innerWidth, window.innerHeight);
				renderer.setClearColor(0x888888);
				document.body.appendChild(renderer.domElement);
				
				controls = new THREE.OrbitControls(camera, renderer.domElement);
				window.addEventListener('resize', onWindowResize, false);
				
				var gridXZ = new THREE.GridHelper(400, 40, 0xff0000, 0xffffff);
				scene.add(gridXZ);
			}
			
			function onWindowResize() {
				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();
				renderer.setSize(window.innerWidth, window.innerHeight);
			}

			function animate() {
				var delta = clock.getDelta();
				controls.update();
				requestAnimationFrame(animate);
				renderer.render(scene, camera);
			}